---
import { slugify } from "../utils";
import FormattedDate from "./FormattedDate.astro";
import type { CollectionEntry } from "astro:content";

type BlogPost = CollectionEntry<"blog">;
const { post }: Record<string, any> | { post: BlogPost } = Astro.props;
---

<article class="bg-white dark:bg-zinc-900 rounded-xl shadow-sm hover:shadow-lg transition-shadow duration-300 p-6 flex flex-col h-full">
  <header class="mb-2 text-xs text-zinc-500 dark:text-zinc-400 font-medium flex items-center justify-between">
    <FormattedDate date={post.data.pubDate} />
    {post.data.readingTime && (
      <span class="ml-2 text-xs text-zinc-400 dark:text-zinc-500">{post.data.readingTime} min read</span>
    )}
  </header>
  <h3 class="text-lg font-bold text-zinc-900 dark:text-white mb-2 leading-snug">
    <a 
      href={`/${post.slug}/`}
      class="hover:text-[#005353] dark:hover:text-[#00E0E0] transition-colors duration-300"
    >
      {post.data.title}
    </a>
  </h3>
  <div class="flex flex-wrap gap-2 mb-3">
    {(post.data.tags || [])?.map((tag: string) => (
      <a
        class="border border-zinc-200 dark:border-zinc-700 rounded-full
        text-xs text-zinc-600 dark:text-zinc-200 no-underline px-3 py-1
        transition-all duration-300
        hover:bg-[#005353] dark:hover:bg-[#00E0E0] hover:border-[#005353] dark:hover:border-[#00E0E0]
        hover:text-white dark:hover:text-zinc-900"
        href={`/tags/${slugify(tag)}`}
      >
        {tag}
      </a>
    ))}
  </div>
  <p class="text-sm text-zinc-700 dark:text-zinc-300 line-clamp-3 flex-1">{post.data.description}</p>
</article>
