---
import HeaderLink from "./HeaderLink.astro";
import { Image } from "astro:assets";
import LogoBlack from "@src/assets/img/logo.svg";
import LogoWhite from "@src/assets/img/logo-inverted.svg";
import GithubWhite from "@src/assets/img/github-mark-white.svg";
import GithubBlack from "@src/assets/img/github-mark.svg";

const menu = [
  {
    link: "/about/",
    label: "About",
  },
  {
    link: "/blog/",
    label: "Blog",
  },
  {
    link: "/projects/",
    label: "Projects",
  },
  {
    link: "/tags/",
    label: "Tags",
  },
];
---

<header
  id='site-header'
  class:list={["flex items-center w-full transition duration-300 z-[999]"]}>
  <div class='container'>
    <nav class='flex gap-4 items-center justify-between py-3'>
      <h2 class='m-0'>
        <a
          href='/'
          class='flex gap-4 items-center text-xl font-black uppercase'>
          <div id='logo-container' class='p-2 bg-transparent'>
            <Image
              src={LogoBlack}
              id='lightLogo'
              alt='Oteri Eyenike'
              class='w-11 shadow-lg'
            />
            <Image
              src={LogoWhite}
              id='darkLogo'
              alt='Oteri Eyenike'
              class='w-11 shadow-lg'
            />
          </div>
        </a>
      </h2>
      <div class='flex'>
        <a
          class='p-3 dark:hidden'
          href='https://github.com/terieyenike'
          target='_blank'>
          <Image src={GithubBlack} width={24} height={24} alt='Github logo' />
        </a>
        <a
          class='p-3 hidden dark:block'
          href='https://github.com/terieyenike'
          target='_blank'>
          <Image src={GithubWhite} width={24} height={24} alt='Github logo' />
        </a>
        <button class='p-3' id='themeToggle' aria-label='Theme mode'>
          <svg
            class='sun'
            xmlns='http://www.w3.org/2000/svg'
            width='24'
            height='24'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'
            stroke-linecap='round'
            stroke-linejoin='round'
            class='lucide lucide-sun'>
            <circle cx='12' cy='12' r='4'></circle>
            <path d='M12 2v2'></path>
            <path d='M12 20v2'></path>
            <path d='m4.93 4.93 1.41 1.41'></path>
            <path d='m17.66 17.66 1.41 1.41'></path>
            <path d='M2 12h2'></path>
            <path d='M20 12h2'></path>
            <path d='m6.34 17.66-1.41 1.41'></path>
            <path d='m19.07 4.93-1.41 1.41'></path>
          </svg>
          <svg
            class='moon'
            xmlns='http://www.w3.org/2000/svg'
            width='24'
            height='24'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'
            stroke-linecap='round'
            stroke-linejoin='round'
            class='lucide lucide-moon'>
            <path d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'></path>
          </svg>
        </button>
      </div>
    </nav>
    <div
      class='fixed top-3 w-auto max-w-full px-3 left-1/2 -translate-x-1/2 z-[999]'>
      <div
        class='flex px-2.5 bg-white/90 dark:bg-zinc-900/75 backdrop-blur-md leading-tight rounded-full border dark:border-zinc-700'>
        <div class='px-2.5 text-sm'>
          <HeaderLink class='py-3 flex items-center' href='/' aria-label='Home'>
            <svg
              xmlns='http://www.w3.org/2000/svg'
              width='20'
              height='20'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              stroke-width='1.7'
              stroke-linecap='round'
              stroke-linejoin='round'
              class='lucide lucide-house'>
              <path d='M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8'></path>
              <path
                d='M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'
              ></path>
            </svg>
          </HeaderLink>
        </div>
        {
          menu.map((item) => (
            <div class='px-2.5 text-sm'>
              <HeaderLink class='py-3 flex items-center' href={item.link}>
                {item.label}
              </HeaderLink>
            </div>
          ))
        }
      </div>
    </div>
  </div>
  <style is:global>
    /* Theme toggle styles */
    #themeToggle .moon {
      display: none;
    }
    .dark #themeToggle .sun {
      display: none;
    }
    .dark #themeToggle .moon {
      display: block;
    }

    /* Logo styles */
    #logo-container {
      position: relative;
      width: 2.75rem; /* w-11 equivalent */
      height: 2.75rem;
    }

    #lightLogo,
    #darkLogo {
      position: absolute;
      top: 0;
      left: 0;
      transition: opacity 0.3s ease;
    }

    #darkLogo {
      opacity: 0;
    }

    .dark #lightLogo {
      opacity: 0;
    }

    .dark #darkLogo {
      opacity: 1;
    }
  </style>
  <script is:inline>
    const theme = (() => {
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme || "");

    function sendMessage(message) {
      const iframe = document.querySelector("iframe.giscus-frame");
      if (!iframe) return;
      iframe.contentWindow.postMessage(
        { giscus: message },
        "https://giscus.app"
      );
    }

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      const isDark = element.classList.contains("dark");
      if (isDark) {
        sendMessage({
          setConfig: {
            theme: "dark_dimmed",
          },
        });
      } else {
        sendMessage({
          setConfig: {
            theme: "light",
          },
        });
      }
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document
      .getElementById("themeToggle")
      ?.addEventListener("click", handleToggleClick);
  </script>
</header>
